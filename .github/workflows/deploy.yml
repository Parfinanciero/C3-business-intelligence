name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Construir el Jar con Maven
      - name: Build JAR file with Maven
        run: |
          mvn clean package
          ls -l target/*.jar

      # 4. Añadir el host SSH a known_hosts
      - name: Add SSH Key to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.PORT }} -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # 5. Configurar la clave SSH para el acceso (agente SSH)
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_KEY }}

      # 6. Desplegar la aplicación en la VPS
      - name: Deploy to VPS
        run: |
          # Ajusta estas rutas según tu entorno
          DEPLOY_DIR="/home/admin_jb_3"
          LOGS_DIR="$DEPLOY_DIR/logs"
          APP_JAR="Bussiness-0.0.1-SNAPSHOT.jar"

          echo "Matando proceso anterior (si existe)..."
          ssh -p ${{ secrets.PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "sudo pkill -f $APP_JAR || true"

          echo "Copiando el nuevo JAR..."
          scp -P ${{ secrets.PORT }} target/*.jar ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:$DEPLOY_DIR/

          echo "Iniciando la aplicación en segundo plano..."
          ssh -p ${{ secrets.PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "\
            nohup java -jar $DEPLOY_DIR/$APP_JAR > $LOGS_DIR/output.log 2>&1 & \
          "

          echo "Deploy completed"
